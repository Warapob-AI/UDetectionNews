// üìÅ src/pages/detectText.jsx (‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß)

import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
// ‚úÖ 1. ‡πÄ‡∏û‡∏¥‡πà‡∏° Grid ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô import
import { Box, Typography, TextField, Button, CircularProgress, Grid, Container, LinearProgress  } from '@mui/material';
import axios from 'axios';
// ‡πÄ‡∏û‡∏¥‡πà‡∏° State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏•‡∏±‡∏ö‡πÇ‡∏´‡∏°‡∏î


// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ import ‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß
import { ToggleButton, ToggleButtonGroup } from '@mui/material';
// ‚úÖ 2. ‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞ Component ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÑ‡∏ß‡πâ‡∏ô‡∏≠‡∏Å DetectText
// ‡∏™‡∏£‡πâ‡∏≤‡∏á Array ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ß‡πâ‡∏ô‡∏≠‡∏Å Component ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
const statsData = [
  {
    value: 'Google Search',
    label: '‡πÄ‡∏£‡∏≤‡πÉ‡∏ä‡πâ Google Search ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô',
  },
  {
    value: 'AI : LLM',
    label: '‡πÄ‡∏£‡∏≤‡πÉ‡∏ä‡πâ AI LLM ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•',
  },
  {
    value: 'Deep Learning',
    label: '‡πÄ‡∏£‡∏≤‡πÄ‡∏ó‡∏£‡∏ô Deep Learning ‡∏à‡∏≤‡∏Å Dataset',
  },
];

// ‡∏™‡∏£‡πâ‡∏≤‡∏á StatsSection Component ‡πÅ‡∏¢‡∏Å‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
const StatsSection = () => {

  return (

    <Box
      sx={{
        width: '100%',
        backgroundColor: '#101125',
        color: 'white',
        py: { xs: 6, md: 8 },
        px: 2,
      }}
    >
      <Container maxWidth='lg' >
        <Grid container spacing={{ xs: 5, md: 3 }} justifyContent="center" data-aos="fade-up" data-aos-delay="200">
          {statsData.map((stat, index) => (
            <Grid size={{ xs: 12, sm: 4 }} key={index} sx={{ textAlign: 'center' }}>
              <Typography
                component="p"
                variant="h6"
                fontWeight={700}
                sx={{ fontSize: { xs: '2.5rem', md: '2rem' } }}
              >
                {stat.value}
              </Typography>
              <Typography
                variant="body1"
                sx={{ color: '#42bdffff', fontWeight: 500 }}
              >
                {stat.label}
              </Typography>
            </Grid>
          ))}
        </Grid>
      </Container>
    </Box>
  );
};

// Component ‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
const DetectText = React.forwardRef((props, ref) => {
  const [newsText, setNewsText] = useState('');
  const [status, setStatus] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [progress, setProgress] = useState(0); // ‚úÖ 2. ‡πÄ‡∏û‡∏¥‡πà‡∏° State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö %
  const navigate = useNavigate();
  const [inputType, setInputType] = useState('text');

  const handleAnalyzeClick = async () => {
    if (!newsText.trim()) {
      const alertMessage = inputType === 'text' ? '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö' : '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö';
      alert(alertMessage);
      return;
    }

    setIsLoading(true);
    setProgress(0); // ‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà 0%

    try {
      let textToAnalyze = newsText;
      // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì %
      const totalSteps = inputType === 'link' ? 3 : 2;
      let currentStep = 0;

      if (inputType === 'link') {
        setStatus('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå...');
        setProgress(10); // <-- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï ProgressZ
        const titleResponse = await axios.post('http://localhost:8000/production/news-website-title', { url: newsText });
        textToAnalyze = titleResponse.data;
      }

      setStatus('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á...');
      setProgress(50); // <-- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Progress
      const searchResponse = await axios.post('http://localhost:8000/production/news-title-search', { task: textToAnalyze });

      setStatus('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå...');
      setProgress(80); // <-- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Progress
      const finalResponse = await axios.post('http://localhost:8000/production/news-title-check', {
        task: textToAnalyze,
        search: JSON.stringify(searchResponse.data)
      });

      // ... ‡∏™‡πà‡∏ß‡∏ô navigate ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°
      navigate('/validation', {
        state: {
          result: finalResponse.data,
          textToAnalyze: textToAnalyze,
          searchResult: searchResponse.data
        }
      });

    } catch (error) {
      console.error("Error fetching data:", error);
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå");
    } finally {
      setIsLoading(false);
      setProgress(0); // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à
    }
  };

  return (
    <> {/* ‚úÖ ‡πÉ‡∏ä‡πâ Fragment ‡∏Ñ‡∏£‡∏≠‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠ return ‡∏™‡∏≠‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô */}

      <StatsSection />


      <Box
        ref={ref}
        id="detectText"
        sx={{
          minHeight: '680px',
          display: 'flex',
          flexDirection: 'column',
          alignItems: 'center',
          justifyContent: 'center',
          scrollSnapAlign: 'start',
          backgroundColor: '#101125',
          p: 4,
          gap: 2,
          pb: 5
        }}
      >
        <Typography variant="h3" color="white" fontWeight={600} gutterBottom data-aos="fade-up">
          ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        </Typography>
        <Typography color="white" sx={{ mb: 1 }} data-aos="fade-up" data-aos-delay="100">
          ‡∏ß‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡πà‡∏≤‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏•‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
        </Typography>

        <ToggleButtonGroup
          value={inputType}
          exclusive
          onChange={(event, newType) => {
            if (newType !== null) {
              setInputType(newType);
            }
          }}
          aria-label="Input type"
          size="small"
          sx={{
            mb: 1.5,
            width: '100%',
            maxWidth: '300px',

            // ‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏∏‡∏Å‡∏≠‡∏±‡∏ô
            '& .MuiToggleButton-root': {
              backgroundColor: '#283481', // ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
              color: '#FFFFFF',
              flex: 1,
              transition: 'background 0.4s ease-in-out, color 0.4s ease-in-out',
            },

            // ‚úÖ 1. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î hover effect ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô "‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å"
            '& .MuiToggleButton-root:not(.Mui-selected):hover': {
              background: 'linear-gradient(90deg,rgba(166, 227, 255, 1) 0%, rgba(106, 170, 251, 1) 100%)',
              color: '#FFFFFF'
            },

            // ‚úÖ 2. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà "‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å" ‡∏°‡∏µ‡∏™‡πÑ‡∏ï‡∏•‡πå gradient ‡∏Ñ‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ‡πÄ‡∏•‡∏¢
            '& .Mui-selected': {
              background: 'linear-gradient(90deg,rgba(166, 227, 255, 1) 0%, rgba(106, 170, 251, 1) 100%)',
              color: '#FFFFFF'
            },

            // ‡∏™‡πÑ‡∏ï‡∏•‡πå borderRadius ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°
            '& .MuiToggleButton-root:first-of-type': {
              borderRadius: '20px 0 0 0',
            },
            '& .MuiToggleButton-root:last-of-type': {
              borderRadius: '0 20px 0 0',
            },
          }}
          data-aos="fade-up"
          data-aos-delay="200"
        >
          <ToggleButton value="text">‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</ToggleButton>
          <ToggleButton value="link">‡∏•‡∏¥‡∏á‡∏Å‡πå</ToggleButton>
        </ToggleButtonGroup>

        {/* ‚úÖ TextField ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡πÅ‡∏Ñ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô placeholder */}
        <TextField
          value={newsText}
          onChange={(e) => setNewsText(e.target.value)}
          multiline
          rows={8}
          placeholder={
            inputType === 'text'
              ? "‡∏ß‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ç‡πà‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà..."
              : "‡∏ß‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå (URL) ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà..."
          }
          variant="filled"
          fullWidth
          sx={{
            maxWidth: '980px',
            backgroundColor: 'rgba(255, 255, 255, 0.1)',
            borderRadius: '4px',
            textarea: { color: 'white' }
          }}
          data-aos="fade-up"
          data-aos-delay="200"
        />

        <Button
          onClick={handleAnalyzeClick}
          disabled={isLoading}
          variant="contained"
          size="large"
          sx={{ mt: 1 }}
          data-aos="fade-up"
          data-aos-delay="300"
        >
          {isLoading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå...' : '‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πà‡∏≤‡∏ß'}
        </Button>
        <Box sx={{  }}></Box>
        {isLoading && (
        <Box sx={{ width: '100%', maxWidth: '700px', mt: 4, mx: 'auto' }}>
          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
            <Typography variant="body2" sx={{ color: 'rgba(255, 255, 255, 0.8)' }}>
              {status}
            </Typography>
            <Typography variant="body2" sx={{ color: 'rgba(255, 255, 255, 0.8)' }}>
              {`${Math.round(progress)}%`}
            </Typography>
          </Box>
          <LinearProgress variant="determinate" value={progress} />
        </Box>
      )}
      </Box>

    </>
  );
});

export default DetectText;